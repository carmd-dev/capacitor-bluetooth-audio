{"version":3,"file":"definitions.js","sourceRoot":"","sources":["../../src/definitions.ts"],"names":[],"mappings":"","sourcesContent":["import type { PluginListenerHandle } from '@capacitor/core';\n\nexport interface BluetoothAudioPlugin {\n  getConnectedDevices(): Promise<DevicesListResponse>;\n  addListener(eventName: 'connectivity_status', listenerFunc: (event: ConnectivityStatusEventResponse) => void): Promise<PluginListenerHandle> & PluginListenerHandle;\n  removeAllListeners(): Promise<void>;\n}\n\nexport interface DevicesListResponse {\n  devices: DeviceResponse[]\n}\n\nexport interface DeviceResponse {\n  address: string;\n  id: string;\n  name: string;\n  class: string;\n}\n\nexport interface ConnectivityStatusEventResponse {\n  device: DeviceResponse\n  connected: Boolean\n}"]}